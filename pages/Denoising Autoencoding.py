import torch
import torch.nn as nn
import streamlit as st
import torch
import matplotlib.pyplot as plt

from PIL import Image
from torchvision import transforms
from AutoEncoderClass import ImprovedAutoencoderNoPooling
from AutoEncoderClass import process_image


st.set_page_config(
    page_title='–û—á–∏—â–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –æ—Ç —à—É–º–æ–≤ —Å –ø–æ–º–æ—â—å—é –∞–≤—Ç–æ—ç–Ω–∫–æ–¥–µ—Ä–∞',  # Setting page title
    page_icon="ü§ñ"     # Setting page icon
)

st.write('## –û—á–∏—â–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –æ—Ç —à—É–º–æ–≤ —Å –ø–æ–º–æ—â—å—é –∞–≤—Ç–æ—ç–Ω–∫–æ–¥–µ—Ä–∞')

device = 'cpu'
model = torch.load('weights/AutoEncoderWeights.pth', map_location=device)
model.eval()

uploaded_file = st.file_uploader("##### –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª...")


col1, col2 = st.columns(2)

if uploaded_file:
    
    input_image, output_image = process_image(uploaded_file, model)

    with col1:

        try:
            st.image(uploaded_file,
                    caption="–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ —Ñ–æ—Ç–æ",
                    )
        except Exception as ex:
            st.error(
                f"–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ.")

    with col2:
        try:
            st.image(output_image, caption='–§–æ—Ç–æ –±–µ–∑ —à—É–º–∞', use_column_width=True)  
        except Exception as ex:
            st.error(
                "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –¥–µ–Ω–æ–π–∑–∏–Ω–≥.")
            st.error(ex)


